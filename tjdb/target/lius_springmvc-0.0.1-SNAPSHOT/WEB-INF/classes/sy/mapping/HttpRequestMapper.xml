<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sy.dao.HttpRequestMapper" >
	<resultMap id="UserResultMap" type="sy.model.TUser" >
		<id column="id" property="id" jdbcType="VARCHAR" />
    	<result column="login_name" property="login_name" jdbcType="VARCHAR" />
    	<result column="password" property="password" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="sex" property="sex" jdbcType="VARCHAR" />
	    <result column="effective_date" property="effective_date" jdbcType="VARCHAR" />
	    <result column="failure_date" property="failure_date" jdbcType="VARCHAR" />
	    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
	    <result column="tel" property="tel" jdbcType="VARCHAR" />
	    <result column="role" property="role" jdbcType="VARCHAR" />
	    <result column="address" property="address" jdbcType="VARCHAR" />
	    <result column="online_type" property="online_type" jdbcType="VARCHAR" />
	    <result column="active" property="active" jdbcType="VARCHAR" />
	    <result column="create_date" property="create_date" jdbcType="VARCHAR" />
	</resultMap>
	
	<update id="updateOnlineTimeout">
		update t_user set online_type='0' 
		where 
		online_type='1' and 
		round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(create_date))/60)>3
	</update>
		
	
	
	<select id="getUser" parameterType="sy.model.TUser" resultMap="UserResultMap">
		select * from t_user 
		where login_name=#{login_name,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR} 
		and online_type='0'
	</select>
	
	<select id="getUserRoleById" parameterType="java.lang.String" resultType="java.lang.String">
		select role from t_user where id=#{id,jdbcType=VARCHAR}
	</select>
	
	<update id="updateUserCreateDate" parameterType="java.lang.String">
		update t_user set create_date=now(),online_type='1' where id=#{user_id,jdbcType=VARCHAR}
	</update>
	
	<select id="getStudentUserListByLessonId" parameterType="java.lang.String" resultMap="UserResultMap">
		select a.* from 
		t_user a
		inner join
		t_user_lesson b
		on
		a.id=b.user_id
		inner join
		t_user_lesson c
		on
		b.lesson_id=c.lesson_id
		where b.lesson_id=#{lesson_id,jdbcType=VARCHAR} and b.user_id=c.user_id and a.role='0' and c.remainder_class_hour>0
	</select>
	
	<resultMap  id="LessonResultMap" type="sy.service.httprequest.HttpLessonData">
		<result column="name" property="name" jdbcType="VARCHAR" />
    	<result column="teacher_name" property="teacher_name" jdbcType="VARCHAR" />
    	<result column="teacher_url" property="teacher_url" jdbcType="VARCHAR" />
    	<result column="student_url" property="student_url" jdbcType="VARCHAR" />
    	<result column="teacher_password" property="teacher_password" jdbcType="VARCHAR" />
    	<result column="assistant_password" property="assistant_password" jdbcType="VARCHAR" />
    	<result column="student_password" property="student_password" jdbcType="VARCHAR" />
    	<result column="lesson_id" property="lesson_id" jdbcType="VARCHAR" />
    	<result column="student_confirm" property="student_confirm" jdbcType="VARCHAR" />
    	<result column="student_id" property="student_id" jdbcType="VARCHAR" />
    	<result column="teacher_id" property="teacher_id" jdbcType="VARCHAR" />
    	<result column="remainder_class_hour" property="remainder_class_hour" jdbcType="VARCHAR" />
    	<result column="class_hour" property="class_hour" jdbcType="VARCHAR" />
	</resultMap>
	<select id="getLessonListByUserId" parameterType="java.lang.String" resultMap="LessonResultMap">
		select a.name,(select name from t_user where id=a.teacher_id) as teacher_name 
		,b.teacher_url as teacher_url,b.student_url as student_url,b.teacher_password as teacher_password
		,b.assistant_password as assistant_password,b.student_password as student_password
		,a.id as lesson_id,a.teacher_id as teacher_id,c.remainder_class_hour,a.class_hour 
		from 
		t_lesson a
		inner join
		t_room b
		on
		a.room_id=b.id
		inner join
		t_user_lesson c
		on
		a.id=c.lesson_id
		where c.user_id=#{user_id,jdbcType=VARCHAR}
	</select>
	
	<select id="getAssistantLessonList" resultMap="LessonResultMap">
		select a.name,(select name from t_user where id=a.teacher_id) as teacher_name 
		,b.teacher_url as teacher_url,b.student_url as student_url,b.teacher_password as teacher_password
		,b.assistant_password as assistant_password,b.student_password as student_password
		,a.id as lesson_id,a.teacher_id as teacher_id,c.remainder_class_hour,a.class_hour,'1' as student_confirm 
		from 
		t_lesson a
		inner join
		t_room b
		on
		a.room_id=b.id
		inner join
		t_user_lesson c
		on
		a.id=c.lesson_id
		where a.id in (select lesson_id from t_room_confirm where student_confirm='1' and
		date=DATE_FORMAT(now(),'%Y-%m-%d') and DATE_FORMAT(now(),'%H:%i:%s') between begin_time and end_time)
		group by a.id
	</select>
	
	<select id="isRoomConfirmByStudentId" parameterType="java.lang.String" resultType="INTEGER">
		select count(id) from t_room_confirm 
		where student_id=#{user_id,jdbcType=VARCHAR} 
		and DATE_FORMAT(now(),'%H:%i:%s') between begin_time and end_time
		and student_confirm='0' and  date=DATE_FORMAT(now(),'%Y-%m-%d')
	</select>
	
	<resultMap  id="RoomConfirmResultMap" type="sy.model.TRoomConfirm">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="lesson_id" property="lesson_id" jdbcType="VARCHAR" />
		<result column="student_id" property="student_id" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacher_id" jdbcType="VARCHAR" />
		<result column="class_hour" property="class_hour" jdbcType="VARCHAR" />
		<result column="begin_time" property="begin_time" jdbcType="VARCHAR" />
		<result column="end_time" property="end_time" jdbcType="VARCHAR" />
		<result column="student_confirm" property="student_confirm" jdbcType="VARCHAR" />
		<result column="date" property="date" jdbcType="VARCHAR" />
		<result column="room_id" property="room_id" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getRoomConfirmByNow" parameterType="java.lang.String" resultMap="RoomConfirmResultMap">
		select * from t_room_confirm where date=DATE_FORMAT(now(),'%Y-%m-%d') and DATE_FORMAT(now(),'%H:%i:%s') between begin_time and end_time
		and (student_id= #{user_id,jdbcType=VARCHAR} or teacher_id=#{user_id,jdbcType=VARCHAR})
		and student_confirm='1'
	</select>
	
	<select id="getRoomConfirmByStudentId" parameterType="java.lang.String" resultMap="RoomConfirmResultMap">
		select * from t_room_confirm where date=DATE_FORMAT(now(),'%Y-%m-%d') and DATE_FORMAT(now(),'%H:%i:%s') between begin_time and end_time
		and student_id= #{user_id,jdbcType=VARCHAR}
		and student_confirm='0'
	</select>
	
	<insert id="saveRoomConfirm" parameterType="sy.model.TRoomConfirm" >
		insert into t_room_confirm (id,lesson_id,student_id,teacher_id,class_hour,begin_time,end_time,student_confirm,date,room_id) 
		values 
		(
			#{id,jdbcType=VARCHAR}
			,#{lesson_id,jdbcType=VARCHAR} 
			,#{student_id,jdbcType=VARCHAR} 
			,#{teacher_id,jdbcType=VARCHAR} 
			,#{class_hour,jdbcType=VARCHAR} 
			,#{begin_time,jdbcType=VARCHAR} 
			,#{end_time,jdbcType=VARCHAR} 
			,#{student_confirm,jdbcType=VARCHAR} 
			,DATE_FORMAT(now(),'%Y-%m-%d')
			,(select room_id from t_lesson where id=#{lesson_id,jdbcType=VARCHAR})
		)
	</insert>
	
	
	
	<select id="ifAllowedToAddFirst" parameterType="sy.model.TRoomConfirm" resultType="INTEGER">
		select count(*) from t_room_confirm 
		where
		 (
		       (begin_time &lt; #{end_time,jdbcType=VARCHAR}  and end_time &gt; #{begin_time,jdbcType=VARCHAR})
		    ) 
		and date=DATE_FORMAT(now(),'%Y-%m-%d')
		and (student_id = #{student_id,jdbcType=VARCHAR} or teacher_id = #{teacher_id,jdbcType=VARCHAR}) 
	</select>
	<!-- 查询是否创建上课申请单 -->
	<select id="ifAllowedToAddSecond" parameterType="sy.model.TRoomConfirm" resultType="INTEGER">
		select count(*) from t_room_confirm 
		where
		 (
		       (begin_time &lt; #{end_time,jdbcType=VARCHAR}  and end_time &gt; #{begin_time,jdbcType=VARCHAR})
		    ) 
		and date=DATE_FORMAT(now(),'%Y-%m-%d')
		and room_id = (select room_id from t_lesson where id=#{lesson_id,jdbcType=VARCHAR})
	</select>
	
	<select id="getStudentRemainderClassHour" parameterType="sy.model.TRoomConfirm" resultType="INTEGER">
		select remainder_class_hour from t_user_lesson where user_id=#{student_id,jdbcType=VARCHAR} and lesson_id=#{lesson_id,jdbcType=VARCHAR}
	</select>
	
	<update id="updateRoomConfirmByStudent" parameterType="sy.model.TRoomConfirm">
		update t_room_confirm set student_confirm='1' where id=#{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateClassHour" parameterType="sy.model.TRoomConfirm">
		update t_user_lesson set remainder_class_hour=remainder_class_hour-#{class_hour,jdbcType=INTEGER} 
		where 
		user_id=#{student_id,jdbcType=VARCHAR} and lesson_id=#{lesson_id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateUserOnlineType" parameterType="java.lang.String" >
		update t_user set online_type='0' where id=#{id,jdbcType=VARCHAR}
	</update>
</mapper>